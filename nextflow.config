params {
	
	// WORKFLOW PARAMETERS TO REVIEW AT EACH RUN
	// ----------------------------------------

    // path to parent directory of Nanopore reads in base-called FASTQ-format
    // Please note that the workflow expects FASTQs to be gzipped.
    fastq_dir = ""

    // CSV with 3 columns: barcode/sample ID, barcode, and reverse barcode.
    barcode_table = "$projectDir/resources/barcodes.csv"

    // CSV specifying primer IDs and sequences
    primer_table = "$projectDir/resources/primers.csv"

	// list of IMGT URLs to download
	url_list = "$projectDir/resources/imgt-https.txt"
	
	// Where to place results
	results = "$launchDir/results"

	// Minimum required number of reads per sample
	min_reads = 5000

	// Minimum expected length of each amplicon (without primers)
	min_len = 500

	// Maximum expected length of each amplicon (without primers)
	max_len = 800

	// Max number of mismatches allowed in primer sequences
	primer_mismatch = 4

	// Required identity for clustering, where 1 would require that
	// clustered reads are 100% nucleotide identical. The identity
	// used should be the more or less equivalent to the error
	// rate of the selected sequencing platform
	id_threshold = 0.85

    // whether to cleanup the work directory after a successful run
    cleanup = false

	// whether to terminate the workflow with errors 
	// (for debugging purposes)
	debugmode = false
	
	
	// WORKFLOW PARAMETERS THAT SHOULD NOT BE CHANGED
	// ----------------------------------------
	mamu_database_files = "$projectDir/resources/blast-db-files.txt"
	
}


// WHETHER TO GENERATE A REPORT OF RUN STATISTICS
report {
	enabled = true
	overwrite = true
	file    = "${params.results}/report.html"
}


// WHETHER TO GENERATE A VISUALIZATION OF THE WORKFLOW
dag {
	enabled = false
	overwrite = true
	file = 'workflow-visualization.png'
}

trace {
    enabled = false
    file = "${params.results}/pipeline_trace.txt"
    fields = 'task_id,name,status,exit,realtime,%cpu,rss'
}


// WHETHER TO REMOVE TEMPORARY FILES AFTER A SUCCESSFUL RUN
cleanup = params.cleanup


// PROFILE OPTIONS
profiles {
	
	standard {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false
		
		process.container = "nrminor/sort-and-assemble:v0.0.4"
		
	}
	
	docker {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false
		
		process.container = "nrminor/sort-and-assemble:v0.0.4"
		
	}
	
	apptainer {
		
		apptainer.enabled = true
		docker.enabled = false
		conda.enabled = false
		
		process.container = "nrminor/sort-and-assemble:v0.0.4"
		
	}

}


// MANIFEST
manifest {
	homePage = ''
	mainScript = 'main.nf'
	defaultBranch = 'main'
	description = ''
	author = ''
}